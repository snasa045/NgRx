/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// AOT v5 bug:
// NO BARRELS or else `ng build --aot` of any app using ngrx-data produces strange errors
// actions
export { EntityActionFactory } from './actions/entity-action-factory';
export { EntityActionGuard } from './actions/entity-action-guard';
export { ofEntityOp, ofEntityType } from './actions/entity-action-operators';
export {} from './actions/entity-action';
export { ChangeSetOperation, EntityCacheAction, ClearCollections, LoadCollections, MergeQuerySet, SetEntityCache, SaveEntities, SaveEntitiesCancel, SaveEntitiesCanceled, SaveEntitiesError, SaveEntitiesSuccess } from './actions/entity-cache-action';
export { excludeEmptyChangeSetItems, ChangeSetItemFactory, changeSetItemFactory } from './actions/entity-cache-change-set';
export { makeErrorOp, makeSuccessOp, EntityOp, OP_SUCCESS, OP_ERROR } from './actions/entity-op';
export { MergeStrategy } from './actions/merge-strategy';
export {} from './actions/update-response-data';
// dataservices
export { DataServiceError } from './dataservices/data-service-error';
export { DefaultDataServiceConfig } from './dataservices/default-data-service-config';
export { DefaultDataService, DefaultDataServiceFactory } from './dataservices/default-data.service';
export { EntityCacheDataService } from './dataservices/entity-cache-data.service';
export { EntityDataService } from './dataservices/entity-data.service';
export { normalizeRoot, EntityHttpResourceUrls, HttpUrlGenerator, DefaultHttpUrlGenerator } from './dataservices/http-url-generator';
export {} from './dataservices/interfaces';
export { PersistenceResultHandler, DefaultPersistenceResultHandler } from './dataservices/persistence-result-handler.service';
// dispatchers
export { EntityCacheDispatcher } from './dispatchers/entity-cache-dispatcher';
export {} from './dispatchers/entity-commands';
export { EntityDispatcherBase } from './dispatchers/entity-dispatcher-base';
export { EntityDispatcherDefaultOptions } from './dispatchers/entity-dispatcher-default-options';
export { EntityDispatcherFactory } from './dispatchers/entity-dispatcher-factory';
export { PersistanceCanceled } from './dispatchers/entity-dispatcher';
// effects
export { EntityCacheEffects } from './effects/entity-cache-effects';
export { persistOps, EntityEffects } from './effects/entity-effects';
// entity-metadata
export { EntityDefinitionService } from './entity-metadata/entity-definition.service';
export { createEntityDefinition } from './entity-metadata/entity-definition';
export { PropsFilterFnFactory } from './entity-metadata/entity-filters';
export { ENTITY_METADATA_TOKEN } from './entity-metadata/entity-metadata';
// entity-services
export { EntityCollectionServiceBase } from './entity-services/entity-collection-service-base';
export { EntityCollectionServiceElementsFactory } from './entity-services/entity-collection-service-elements-factory';
export { EntityCollectionServiceFactory } from './entity-services/entity-collection-service-factory';
export {} from './entity-services/entity-collection-service';
export { EntityServicesBase } from './entity-services/entity-services-base';
export { EntityServicesElements } from './entity-services/entity-services-elements';
export { EntityServices } from './entity-services/entity-services';
// reducers
export { ENTITY_CACHE_NAME, ENTITY_CACHE_NAME_TOKEN, ENTITY_CACHE_META_REDUCERS, ENTITY_COLLECTION_META_REDUCERS, INITIAL_ENTITY_CACHE_STATE } from './reducers/constants';
export { EntityCacheReducerFactory } from './reducers/entity-cache-reducer';
export {} from './reducers/entity-cache';
export { EntityChangeTrackerBase } from './reducers/entity-change-tracker-base';
export {} from './reducers/entity-change-tracker';
export { createEmptyEntityCollection, EntityCollectionCreator } from './reducers/entity-collection-creator';
export { EntityCollectionReducerMethods, EntityCollectionReducerMethodsFactory } from './reducers/entity-collection-reducer-methods';
export { EntityCollectionReducerRegistry } from './reducers/entity-collection-reducer-registry';
export { EntityCollectionReducerFactory } from './reducers/entity-collection-reducer';
export { ChangeType } from './reducers/entity-collection';
// selectors
export { createEntityCacheSelector, ENTITY_CACHE_SELECTOR_TOKEN, entityCacheSelectorProvider } from './selectors/entity-cache-selector';
export { EntitySelectorsFactory } from './selectors/entity-selectors';
export { EntitySelectors$Factory } from './selectors/entity-selectors$';
// Utils
export { CorrelationIdGenerator } from './utils/correlation-id-generator';
export { DefaultLogger } from './utils/default-logger';
export { DefaultPluralizer } from './utils/default-pluralizer';
export { getUuid, getGuid, getGuidComb, guidComparer } from './utils/guid-fns';
export { Logger, PLURAL_NAMES_TOKEN, Pluralizer } from './utils/interfaces';
export { defaultSelectId, flattenArgs, toUpdateFactory } from './utils/utilities';
// EntityDataModule
export { EntityDataModule } from './entity-data.module';
export { EntityDataModuleWithoutEffects, } from './entity-data-without-effects.module';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2RhdGEvc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQSxvQ0FBYyxpQ0FBaUMsQ0FBQztBQUNoRCxrQ0FBYywrQkFBK0IsQ0FBQztBQUM5Qyx5Q0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxlQUFjLHlCQUF5QixDQUFDO0FBQ3hDLHdOQUFjLCtCQUErQixDQUFDO0FBQzlDLHVGQUFjLG1DQUFtQyxDQUFDO0FBQ2xELDJFQUFjLHFCQUFxQixDQUFDO0FBQ3BDLDhCQUFjLDBCQUEwQixDQUFDO0FBQ3pDLGVBQWMsZ0NBQWdDLENBQUM7O0FBRy9DLGlDQUFjLG1DQUFtQyxDQUFDO0FBQ2xELHlDQUFjLDRDQUE0QyxDQUFDO0FBQzNELDhEQUFjLHFDQUFxQyxDQUFDO0FBQ3BELHVDQUFjLDBDQUEwQyxDQUFDO0FBQ3pELGtDQUFjLG9DQUFvQyxDQUFDO0FBQ25ELGlHQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGVBQWMsMkJBQTJCLENBQUM7QUFDMUMsMEVBQWMsbURBQW1ELENBQUM7O0FBR2xFLHNDQUFjLHVDQUF1QyxDQUFDO0FBQ3RELGVBQWMsK0JBQStCLENBQUM7QUFDOUMscUNBQWMsc0NBQXNDLENBQUM7QUFDckQsK0NBQWMsaURBQWlELENBQUM7QUFDaEUsd0NBQWMseUNBQXlDLENBQUM7QUFDeEQsb0NBQWMsaUNBQWlDLENBQUM7O0FBR2hELG1DQUFjLGdDQUFnQyxDQUFDO0FBQy9DLDBDQUFjLDBCQUEwQixDQUFDOztBQUd6Qyx3Q0FBYyw2Q0FBNkMsQ0FBQztBQUM1RCx1Q0FBYyxxQ0FBcUMsQ0FBQztBQUNwRCxxQ0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxzQ0FBYyxtQ0FBbUMsQ0FBQzs7QUFHbEQsNENBQWMsa0RBQWtELENBQUM7QUFDakUsdURBQWMsOERBQThELENBQUM7QUFDN0UsK0NBQWMscURBQXFELENBQUM7QUFDcEUsZUFBYyw2Q0FBNkMsQ0FBQztBQUM1RCxtQ0FBYyx3Q0FBd0MsQ0FBQztBQUN2RCx1Q0FBYyw0Q0FBNEMsQ0FBQztBQUMzRCwrQkFBYyxtQ0FBbUMsQ0FBQzs7QUFHbEQsb0pBQWMsc0JBQXNCLENBQUM7QUFDckMsMENBQWMsaUNBQWlDLENBQUM7QUFDaEQsZUFBYyx5QkFBeUIsQ0FBQztBQUN4Qyx3Q0FBYyx1Q0FBdUMsQ0FBQztBQUN0RCxlQUFjLGtDQUFrQyxDQUFDO0FBQ2pELHFFQUFjLHNDQUFzQyxDQUFDO0FBQ3JELHNGQUFjLDhDQUE4QyxDQUFDO0FBQzdELGdEQUFjLCtDQUErQyxDQUFDO0FBQzlELCtDQUFjLHNDQUFzQyxDQUFDO0FBQ3JELDJCQUFjLDhCQUE4QixDQUFDOztBQUc3QyxvR0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCx1Q0FBYyw4QkFBOEIsQ0FBQztBQUM3Qyx3Q0FBYywrQkFBK0IsQ0FBQzs7QUFHOUMsdUNBQWMsa0NBQWtDLENBQUM7QUFDakQsOEJBQWMsd0JBQXdCLENBQUM7QUFDdkMsa0NBQWMsNEJBQTRCLENBQUM7QUFDM0MsNERBQWMsa0JBQWtCLENBQUM7QUFDakMsdURBQWMsb0JBQW9CLENBQUM7QUFDbkMsOERBQWMsbUJBQW1CLENBQUM7O0FBR2xDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFDTCw4QkFBOEIsR0FFL0IsTUFBTSxzQ0FBc0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEFPVCB2NSBidWc6XG4vLyBOTyBCQVJSRUxTIG9yIGVsc2UgYG5nIGJ1aWxkIC0tYW90YCBvZiBhbnkgYXBwIHVzaW5nIG5ncngtZGF0YSBwcm9kdWNlcyBzdHJhbmdlIGVycm9yc1xuLy8gYWN0aW9uc1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL2VudGl0eS1hY3Rpb24tZmFjdG9yeSc7XG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvZW50aXR5LWFjdGlvbi1ndWFyZCc7XG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvZW50aXR5LWFjdGlvbi1vcGVyYXRvcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL2VudGl0eS1hY3Rpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL2VudGl0eS1jYWNoZS1hY3Rpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL2VudGl0eS1jYWNoZS1jaGFuZ2Utc2V0JztcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9lbnRpdHktb3AnO1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL21lcmdlLXN0cmF0ZWd5JztcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy91cGRhdGUtcmVzcG9uc2UtZGF0YSc7XG5cbi8vIGRhdGFzZXJ2aWNlc1xuZXhwb3J0ICogZnJvbSAnLi9kYXRhc2VydmljZXMvZGF0YS1zZXJ2aWNlLWVycm9yJztcbmV4cG9ydCAqIGZyb20gJy4vZGF0YXNlcnZpY2VzL2RlZmF1bHQtZGF0YS1zZXJ2aWNlLWNvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFzZXJ2aWNlcy9kZWZhdWx0LWRhdGEuc2VydmljZSc7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFzZXJ2aWNlcy9lbnRpdHktY2FjaGUtZGF0YS5zZXJ2aWNlJztcbmV4cG9ydCAqIGZyb20gJy4vZGF0YXNlcnZpY2VzL2VudGl0eS1kYXRhLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9kYXRhc2VydmljZXMvaHR0cC11cmwtZ2VuZXJhdG9yJztcbmV4cG9ydCAqIGZyb20gJy4vZGF0YXNlcnZpY2VzL2ludGVyZmFjZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9kYXRhc2VydmljZXMvcGVyc2lzdGVuY2UtcmVzdWx0LWhhbmRsZXIuc2VydmljZSc7XG5cbi8vIGRpc3BhdGNoZXJzXG5leHBvcnQgKiBmcm9tICcuL2Rpc3BhdGNoZXJzL2VudGl0eS1jYWNoZS1kaXNwYXRjaGVyJztcbmV4cG9ydCAqIGZyb20gJy4vZGlzcGF0Y2hlcnMvZW50aXR5LWNvbW1hbmRzJztcbmV4cG9ydCAqIGZyb20gJy4vZGlzcGF0Y2hlcnMvZW50aXR5LWRpc3BhdGNoZXItYmFzZSc7XG5leHBvcnQgKiBmcm9tICcuL2Rpc3BhdGNoZXJzL2VudGl0eS1kaXNwYXRjaGVyLWRlZmF1bHQtb3B0aW9ucyc7XG5leHBvcnQgKiBmcm9tICcuL2Rpc3BhdGNoZXJzL2VudGl0eS1kaXNwYXRjaGVyLWZhY3RvcnknO1xuZXhwb3J0ICogZnJvbSAnLi9kaXNwYXRjaGVycy9lbnRpdHktZGlzcGF0Y2hlcic7XG5cbi8vIGVmZmVjdHNcbmV4cG9ydCAqIGZyb20gJy4vZWZmZWN0cy9lbnRpdHktY2FjaGUtZWZmZWN0cyc7XG5leHBvcnQgKiBmcm9tICcuL2VmZmVjdHMvZW50aXR5LWVmZmVjdHMnO1xuXG4vLyBlbnRpdHktbWV0YWRhdGFcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LW1ldGFkYXRhL2VudGl0eS1kZWZpbml0aW9uLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktbWV0YWRhdGEvZW50aXR5LWRlZmluaXRpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktbWV0YWRhdGEvZW50aXR5LWZpbHRlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktbWV0YWRhdGEvZW50aXR5LW1ldGFkYXRhJztcblxuLy8gZW50aXR5LXNlcnZpY2VzXG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1zZXJ2aWNlcy9lbnRpdHktY29sbGVjdGlvbi1zZXJ2aWNlLWJhc2UnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktc2VydmljZXMvZW50aXR5LWNvbGxlY3Rpb24tc2VydmljZS1lbGVtZW50cy1mYWN0b3J5JztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LXNlcnZpY2VzL2VudGl0eS1jb2xsZWN0aW9uLXNlcnZpY2UtZmFjdG9yeSc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1zZXJ2aWNlcy9lbnRpdHktY29sbGVjdGlvbi1zZXJ2aWNlJztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LXNlcnZpY2VzL2VudGl0eS1zZXJ2aWNlcy1iYXNlJztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LXNlcnZpY2VzL2VudGl0eS1zZXJ2aWNlcy1lbGVtZW50cyc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1zZXJ2aWNlcy9lbnRpdHktc2VydmljZXMnO1xuXG4vLyByZWR1Y2Vyc1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9jb25zdGFudHMnO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY2FjaGUtcmVkdWNlcic7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jYWNoZSc7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jaGFuZ2UtdHJhY2tlci1iYXNlJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNoYW5nZS10cmFja2VyJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNvbGxlY3Rpb24tY3JlYXRvcic7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jb2xsZWN0aW9uLXJlZHVjZXItbWV0aG9kcyc7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jb2xsZWN0aW9uLXJlZHVjZXItcmVnaXN0cnknO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY29sbGVjdGlvbi1yZWR1Y2VyJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNvbGxlY3Rpb24nO1xuXG4vLyBzZWxlY3RvcnNcbmV4cG9ydCAqIGZyb20gJy4vc2VsZWN0b3JzL2VudGl0eS1jYWNoZS1zZWxlY3Rvcic7XG5leHBvcnQgKiBmcm9tICcuL3NlbGVjdG9ycy9lbnRpdHktc2VsZWN0b3JzJztcbmV4cG9ydCAqIGZyb20gJy4vc2VsZWN0b3JzL2VudGl0eS1zZWxlY3RvcnMkJztcblxuLy8gVXRpbHNcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvY29ycmVsYXRpb24taWQtZ2VuZXJhdG9yJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvZGVmYXVsdC1sb2dnZXInO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy9kZWZhdWx0LXBsdXJhbGl6ZXInO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy9ndWlkLWZucyc7XG5leHBvcnQgKiBmcm9tICcuL3V0aWxzL2ludGVyZmFjZXMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy91dGlsaXRpZXMnO1xuXG4vLyBFbnRpdHlEYXRhTW9kdWxlXG5leHBvcnQgeyBFbnRpdHlEYXRhTW9kdWxlIH0gZnJvbSAnLi9lbnRpdHktZGF0YS5tb2R1bGUnO1xuZXhwb3J0IHtcbiAgRW50aXR5RGF0YU1vZHVsZVdpdGhvdXRFZmZlY3RzLFxuICBFbnRpdHlEYXRhTW9kdWxlQ29uZmlnLFxufSBmcm9tICcuL2VudGl0eS1kYXRhLXdpdGhvdXQtZWZmZWN0cy5tb2R1bGUnO1xuIl19