{"version":3,"file":"entity-collection-reducer-registry.d.ts","sources":["entity-collection-reducer-registry.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { MetaReducer } from '@ngrx/store';\nimport { EntityAction } from '../actions/entity-action';\nimport { EntityCollection } from './entity-collection';\nimport { EntityCollectionReducer, EntityCollectionReducerFactory } from './entity-collection-reducer';\n/** A hash of EntityCollectionReducers */\nexport interface EntityCollectionReducers {\n    [entity: string]: EntityCollectionReducer<any>;\n}\n/**\n * Registry of entity types and their previously-constructed reducers.\n * Can create a new CollectionReducer, which it registers for subsequent use.\n */\nexport declare class EntityCollectionReducerRegistry {\n    private entityCollectionReducerFactory;\n    protected entityCollectionReducers: EntityCollectionReducers;\n    private entityCollectionMetaReducer;\n    constructor(entityCollectionReducerFactory: EntityCollectionReducerFactory, entityCollectionMetaReducers?: MetaReducer<EntityCollection, EntityAction>[]);\n    /**\n     * Get the registered EntityCollectionReducer<T> for this entity type or create one and register it.\n     * @param entityName Name of the entity type for this reducer\n     */\n    getOrCreateReducer<T>(entityName: string): EntityCollectionReducer<T>;\n    /**\n     * Register an EntityCollectionReducer for an entity type\n     * @param entityName - the name of the entity type\n     * @param reducer - reducer for that entity type\n     *\n     * Examples:\n     *   registerReducer('Hero', myHeroReducer);\n     *   registerReducer('Villain', myVillainReducer);\n     */\n    registerReducer<T>(entityName: string, reducer: EntityCollectionReducer<T>): EntityCollectionReducer<T>;\n    /**\n     * Register a batch of EntityCollectionReducers.\n     * @param reducers - reducers to merge into existing reducers\n     *\n     * Examples:\n     *   registerReducers({\n     *     Hero: myHeroReducer,\n     *     Villain: myVillainReducer\n     *   });\n     */\n    registerReducers(reducers: EntityCollectionReducers): void;\n}\n"]}