{"version":3,"file":"entity-data.service.d.ts","sources":["entity-data.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EntityCollectionDataService } from './interfaces';\nimport { DefaultDataServiceFactory } from './default-data.service';\n/**\n * Registry of EntityCollection data services that make REST-like CRUD calls\n * to entity collection endpoints.\n */\nexport declare class EntityDataService {\n    protected defaultDataServiceFactory: DefaultDataServiceFactory;\n    protected services: {\n        [name: string]: EntityCollectionDataService<any>;\n    };\n    constructor(defaultDataServiceFactory: DefaultDataServiceFactory);\n    /**\n     * Get (or create) a data service for entity type\n     * @param entityName - the name of the type\n     *\n     * Examples:\n     *   getService('Hero'); // data service for Heroes, untyped\n     *   getService<Hero>('Hero'); // data service for Heroes, typed as Hero\n     */\n    getService<T>(entityName: string): EntityCollectionDataService<T>;\n    /**\n     * Register an EntityCollectionDataService for an entity type\n     * @param entityName - the name of the entity type\n     * @param service - data service for that entity type\n     *\n     * Examples:\n     *   registerService('Hero', myHeroDataService);\n     *   registerService('Villain', myVillainDataService);\n     */\n    registerService<T>(entityName: string, service: EntityCollectionDataService<T>): void;\n    /**\n     * Register a batch of data services.\n     * @param services - data services to merge into existing services\n     *\n     * Examples:\n     *   registerServices({\n     *     Hero: myHeroDataService,\n     *     Villain: myVillainDataService\n     *   });\n     */\n    registerServices(services: {\n        [name: string]: EntityCollectionDataService<any>;\n    }): void;\n}\n"]}