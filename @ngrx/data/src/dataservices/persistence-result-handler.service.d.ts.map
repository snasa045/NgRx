{"version":3,"file":"persistence-result-handler.service.d.ts","sources":["persistence-result-handler.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Action } from '@ngrx/store';\nimport { DataServiceError, EntityActionDataServiceError } from './data-service-error';\nimport { EntityAction } from '../actions/entity-action';\nimport { EntityActionFactory } from '../actions/entity-action-factory';\nimport { Logger } from '../utils/interfaces';\n/**\n * Handling of responses from persistence operation\n */\nexport declare abstract class PersistenceResultHandler {\n    /** Handle successful result of persistence operation for an action */\n    abstract handleSuccess(originalAction: EntityAction): (data: any) => Action;\n    /** Handle error result of persistence operation for an action */\n    abstract handleError(originalAction: EntityAction): (error: DataServiceError | Error) => EntityAction<EntityActionDataServiceError>;\n}\n/**\n * Default handling of responses from persistence operation,\n * specifically an EntityDataService\n */\nexport declare class DefaultPersistenceResultHandler implements PersistenceResultHandler {\n    private logger;\n    private entityActionFactory;\n    constructor(logger: Logger, entityActionFactory: EntityActionFactory);\n    /** Handle successful result of persistence operation on an EntityAction */\n    handleSuccess(originalAction: EntityAction): (data: any) => Action;\n    /** Handle error result of persistence operation on an EntityAction */\n    handleError(originalAction: EntityAction): (error: DataServiceError | Error) => EntityAction<EntityActionDataServiceError>;\n}\n"]}