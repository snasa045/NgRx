{"version":3,"file":"default-data.service.d.ts","sources":["default-data.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Update } from '@ngrx/entity';\nimport { DefaultDataServiceConfig } from './default-data-service-config';\nimport { EntityCollectionDataService, HttpMethods, QueryParams } from './interfaces';\nimport { HttpUrlGenerator } from './http-url-generator';\n/**\n * A basic, generic entity data service\n * suitable for persistence of most entities.\n * Assumes a common REST-y web API\n */\nexport declare class DefaultDataService<T> implements EntityCollectionDataService<T> {\n    protected http: HttpClient;\n    protected httpUrlGenerator: HttpUrlGenerator;\n    protected _name: string;\n    protected delete404OK: boolean;\n    protected entityName: string;\n    protected entityUrl: string;\n    protected entitiesUrl: string;\n    protected getDelay: number;\n    protected saveDelay: number;\n    protected timeout: number;\n    readonly name: string;\n    constructor(entityName: string, http: HttpClient, httpUrlGenerator: HttpUrlGenerator, config?: DefaultDataServiceConfig);\n    add(entity: T): Observable<T>;\n    delete(key: number | string): Observable<number | string>;\n    getAll(): Observable<T[]>;\n    getById(key: number | string): Observable<T>;\n    getWithQuery(queryParams: QueryParams | string): Observable<T[]>;\n    update(update: Update<T>): Observable<T>;\n    upsert(entity: T): Observable<T>;\n    protected execute(method: HttpMethods, url: string, data?: any, // data, error, or undefined/null\n    options?: any): Observable<any>;\n    private handleError;\n    private handleDelete404;\n}\n/**\n * Create a basic, generic entity data service\n * suitable for persistence of most entities.\n * Assumes a common REST-y web API\n */\nexport declare class DefaultDataServiceFactory {\n    protected http: HttpClient;\n    protected httpUrlGenerator: HttpUrlGenerator;\n    protected config?: DefaultDataServiceConfig | undefined;\n    constructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator, config?: DefaultDataServiceConfig | undefined);\n    /**\n     * Create a default {EntityCollectionDataService} for the given entity type\n     * @param entityName {string} Name of the entity type for this data service\n     */\n    create<T>(entityName: string): EntityCollectionDataService<T>;\n}\n"]}