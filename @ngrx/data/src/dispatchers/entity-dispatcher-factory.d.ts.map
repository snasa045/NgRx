{"version":3,"file":"entity-dispatcher-factory.d.ts","sources":["entity-dispatcher-factory.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy } from '@angular/core';\nimport { Action, Store } from '@ngrx/store';\nimport { IdSelector } from '@ngrx/entity';\nimport { Observable } from 'rxjs';\nimport { CorrelationIdGenerator } from '../utils/correlation-id-generator';\nimport { EntityDispatcherDefaultOptions } from './entity-dispatcher-default-options';\nimport { EntityActionFactory } from '../actions/entity-action-factory';\nimport { EntityCache } from '../reducers/entity-cache';\nimport { EntityCacheSelector } from '../selectors/entity-cache-selector';\nimport { EntityDispatcher } from './entity-dispatcher';\n/** Creates EntityDispatchers for entity collections */\nexport declare class EntityDispatcherFactory implements OnDestroy {\n    private entityActionFactory;\n    private store;\n    private entityDispatcherDefaultOptions;\n    private entityCacheSelector;\n    private correlationIdGenerator;\n    /**\n     * Actions scanned by the store after it processed them with reducers.\n     * A replay observable of the most recent action reduced by the store.\n     */\n    reducedActions$: Observable<Action>;\n    private raSubscription;\n    constructor(entityActionFactory: EntityActionFactory, store: Store<EntityCache>, entityDispatcherDefaultOptions: EntityDispatcherDefaultOptions, scannedActions$: Observable<Action>, entityCacheSelector: EntityCacheSelector, correlationIdGenerator: CorrelationIdGenerator);\n    /**\n     * Create an `EntityDispatcher` for an entity type `T` and store.\n     */\n    create<T>(\n    /** Name of the entity type */\n    entityName: string, \n    /**\n     * Function that returns the primary key for an entity `T`.\n     * Usually acquired from `EntityDefinition` metadata.\n     */\n    selectId?: IdSelector<T>, \n    /** Defaults for options that influence dispatcher behavior such as whether\n     * `add()` is optimistic or pessimistic;\n     */\n    defaultOptions?: Partial<EntityDispatcherDefaultOptions>): EntityDispatcher<T>;\n    ngOnDestroy(): void;\n}\n"]}